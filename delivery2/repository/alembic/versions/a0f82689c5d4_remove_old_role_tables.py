"""Remove old role tables

Revision ID: a0f82689c5d4
Revises: 70c40250fdc8
Create Date: 2024-12-03 00:59:03.063915

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "a0f82689c5d4"
down_revision: Union[str, None] = "70c40250fdc8"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_role_name", table_name="role")
    op.drop_table("subjectrolelink")
    op.drop_table("role")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "subjectrolelink",
        sa.Column(
            "subject_username", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "role_name",
            postgresql.ENUM("MANAGERS", "USER", name="roleenum"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["role_name"], ["role.name"], name="subjectrolelink_role_name_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["subject_username"],
            ["subject.username"],
            name="subjectrolelink_subject_username_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "subject_username", "role_name", name="subjectrolelink_pkey"
        ),
    )
    op.create_table(
        "role",
        sa.Column(
            "name",
            postgresql.ENUM("MANAGERS", "USER", name="roleenum"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "role_permissions",
            postgresql.ARRAY(
                postgresql.ENUM(
                    "ROLE_NEW",
                    "ROLE_DOWN",
                    "ROLE_UP",
                    "ROLE_MOD",
                    name="rolepermission",
                )
            ),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "organization_permissions",
            postgresql.ARRAY(
                postgresql.ENUM(
                    "ROLE_ACL",
                    "SUBJECT_NEW",
                    "SUBJECT_DOWN",
                    "SUBJECT_UP",
                    "DOC_NEW",
                    name="organizationpermission",
                )
            ),
            autoincrement=False,
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("name", name="role_pkey"),
    )
    op.create_index("ix_role_name", "role", ["name"], unique=False)
    # ### end Alembic commands ###
